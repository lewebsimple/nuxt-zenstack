"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserInputSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
;
const UserSelect_schema_1 = require("../objects/UserSelect.schema");
const UserInclude_schema_1 = require("../objects/UserInclude.schema");
const UserWhereUniqueInput_schema_1 = require("../objects/UserWhereUniqueInput.schema");
const UserWhereInput_schema_1 = require("../objects/UserWhereInput.schema");
const UserOrderByWithRelationInput_schema_1 = require("../objects/UserOrderByWithRelationInput.schema");
const UserScalarFieldEnum_schema_1 = require("../enums/UserScalarFieldEnum.schema");
const UserCreateInput_schema_1 = require("../objects/UserCreateInput.schema");
const UserUncheckedCreateInput_schema_1 = require("../objects/UserUncheckedCreateInput.schema");
const UserUpdateInput_schema_1 = require("../objects/UserUpdateInput.schema");
const UserUncheckedUpdateInput_schema_1 = require("../objects/UserUncheckedUpdateInput.schema");
const UserUpdateManyMutationInput_schema_1 = require("../objects/UserUpdateManyMutationInput.schema");
const UserUncheckedUpdateManyInput_schema_1 = require("../objects/UserUncheckedUpdateManyInput.schema");
const UserCountAggregateInput_schema_1 = require("../objects/UserCountAggregateInput.schema");
const UserMinAggregateInput_schema_1 = require("../objects/UserMinAggregateInput.schema");
const UserMaxAggregateInput_schema_1 = require("../objects/UserMaxAggregateInput.schema");
const UserOrderByWithAggregationInput_schema_1 = require("../objects/UserOrderByWithAggregationInput.schema");
const UserScalarWhereWithAggregatesInput_schema_1 = require("../objects/UserScalarWhereWithAggregatesInput.schema");
exports.UserInputSchema = {
    findUnique: zod_1.z.object({ select: zod_1.z.lazy(() => UserSelect_schema_1.UserSelectObjectSchema.optional()), include: zod_1.z.lazy(() => UserInclude_schema_1.UserIncludeObjectSchema.optional()), where: UserWhereUniqueInput_schema_1.UserWhereUniqueInputObjectSchema }), findFirst: zod_1.z.object({ select: zod_1.z.lazy(() => UserSelect_schema_1.UserSelectObjectSchema.optional()), include: zod_1.z.lazy(() => UserInclude_schema_1.UserIncludeObjectSchema.optional()), where: UserWhereInput_schema_1.UserWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([UserOrderByWithRelationInput_schema_1.UserOrderByWithRelationInputObjectSchema, UserOrderByWithRelationInput_schema_1.UserOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserWhereUniqueInput_schema_1.UserWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(UserScalarFieldEnum_schema_1.UserScalarFieldEnumSchema).optional() }), findMany: zod_1.z.object({ select: zod_1.z.lazy(() => UserSelect_schema_1.UserSelectObjectSchema.optional()), include: zod_1.z.lazy(() => UserInclude_schema_1.UserIncludeObjectSchema.optional()), where: UserWhereInput_schema_1.UserWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([UserOrderByWithRelationInput_schema_1.UserOrderByWithRelationInputObjectSchema, UserOrderByWithRelationInput_schema_1.UserOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserWhereUniqueInput_schema_1.UserWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(UserScalarFieldEnum_schema_1.UserScalarFieldEnumSchema).optional() }), create: zod_1.z.object({ select: zod_1.z.lazy(() => UserSelect_schema_1.UserSelectObjectSchema.optional()), include: zod_1.z.lazy(() => UserInclude_schema_1.UserIncludeObjectSchema.optional()), data: zod_1.z.union([UserCreateInput_schema_1.UserCreateInputObjectSchema, UserUncheckedCreateInput_schema_1.UserUncheckedCreateInputObjectSchema]) }), 'delete': zod_1.z.object({ select: zod_1.z.lazy(() => UserSelect_schema_1.UserSelectObjectSchema.optional()), include: zod_1.z.lazy(() => UserInclude_schema_1.UserIncludeObjectSchema.optional()), where: UserWhereUniqueInput_schema_1.UserWhereUniqueInputObjectSchema }), deleteMany: zod_1.z.object({ where: UserWhereInput_schema_1.UserWhereInputObjectSchema.optional() }), update: zod_1.z.object({ select: zod_1.z.lazy(() => UserSelect_schema_1.UserSelectObjectSchema.optional()), include: zod_1.z.lazy(() => UserInclude_schema_1.UserIncludeObjectSchema.optional()), data: zod_1.z.union([UserUpdateInput_schema_1.UserUpdateInputObjectSchema, UserUncheckedUpdateInput_schema_1.UserUncheckedUpdateInputObjectSchema]), where: UserWhereUniqueInput_schema_1.UserWhereUniqueInputObjectSchema }), updateMany: zod_1.z.object({ data: zod_1.z.union([UserUpdateManyMutationInput_schema_1.UserUpdateManyMutationInputObjectSchema, UserUncheckedUpdateManyInput_schema_1.UserUncheckedUpdateManyInputObjectSchema]), where: UserWhereInput_schema_1.UserWhereInputObjectSchema.optional() }), upsert: zod_1.z.object({ select: zod_1.z.lazy(() => UserSelect_schema_1.UserSelectObjectSchema.optional()), include: zod_1.z.lazy(() => UserInclude_schema_1.UserIncludeObjectSchema.optional()), where: UserWhereUniqueInput_schema_1.UserWhereUniqueInputObjectSchema, create: zod_1.z.union([UserCreateInput_schema_1.UserCreateInputObjectSchema, UserUncheckedCreateInput_schema_1.UserUncheckedCreateInputObjectSchema]), update: zod_1.z.union([UserUpdateInput_schema_1.UserUpdateInputObjectSchema, UserUncheckedUpdateInput_schema_1.UserUncheckedUpdateInputObjectSchema]) }), aggregate: zod_1.z.object({ where: UserWhereInput_schema_1.UserWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([UserOrderByWithRelationInput_schema_1.UserOrderByWithRelationInputObjectSchema, UserOrderByWithRelationInput_schema_1.UserOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: UserWhereUniqueInput_schema_1.UserWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), _count: zod_1.z.union([zod_1.z.literal(true), UserCountAggregateInput_schema_1.UserCountAggregateInputObjectSchema]).optional(), _min: UserMinAggregateInput_schema_1.UserMinAggregateInputObjectSchema.optional(), _max: UserMaxAggregateInput_schema_1.UserMaxAggregateInputObjectSchema.optional() }), groupBy: zod_1.z.object({ where: UserWhereInput_schema_1.UserWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([UserOrderByWithAggregationInput_schema_1.UserOrderByWithAggregationInputObjectSchema, UserOrderByWithAggregationInput_schema_1.UserOrderByWithAggregationInputObjectSchema.array()]).optional(), having: UserScalarWhereWithAggregatesInput_schema_1.UserScalarWhereWithAggregatesInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), by: zod_1.z.array(UserScalarFieldEnum_schema_1.UserScalarFieldEnumSchema), _count: zod_1.z.union([zod_1.z.literal(true), UserCountAggregateInput_schema_1.UserCountAggregateInputObjectSchema]).optional(), _min: UserMinAggregateInput_schema_1.UserMinAggregateInputObjectSchema.optional(), _max: UserMaxAggregateInput_schema_1.UserMaxAggregateInputObjectSchema.optional() }),
};
