"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostInputSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
;
const PostSelect_schema_1 = require("../objects/PostSelect.schema");
const PostInclude_schema_1 = require("../objects/PostInclude.schema");
const PostWhereUniqueInput_schema_1 = require("../objects/PostWhereUniqueInput.schema");
const PostWhereInput_schema_1 = require("../objects/PostWhereInput.schema");
const PostOrderByWithRelationInput_schema_1 = require("../objects/PostOrderByWithRelationInput.schema");
const PostScalarFieldEnum_schema_1 = require("../enums/PostScalarFieldEnum.schema");
const PostCreateInput_schema_1 = require("../objects/PostCreateInput.schema");
const PostUncheckedCreateInput_schema_1 = require("../objects/PostUncheckedCreateInput.schema");
const PostUpdateInput_schema_1 = require("../objects/PostUpdateInput.schema");
const PostUncheckedUpdateInput_schema_1 = require("../objects/PostUncheckedUpdateInput.schema");
const PostUpdateManyMutationInput_schema_1 = require("../objects/PostUpdateManyMutationInput.schema");
const PostUncheckedUpdateManyInput_schema_1 = require("../objects/PostUncheckedUpdateManyInput.schema");
const PostCountAggregateInput_schema_1 = require("../objects/PostCountAggregateInput.schema");
const PostMinAggregateInput_schema_1 = require("../objects/PostMinAggregateInput.schema");
const PostMaxAggregateInput_schema_1 = require("../objects/PostMaxAggregateInput.schema");
const PostOrderByWithAggregationInput_schema_1 = require("../objects/PostOrderByWithAggregationInput.schema");
const PostScalarWhereWithAggregatesInput_schema_1 = require("../objects/PostScalarWhereWithAggregatesInput.schema");
exports.PostInputSchema = {
    findUnique: zod_1.z.object({ select: zod_1.z.lazy(() => PostSelect_schema_1.PostSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PostInclude_schema_1.PostIncludeObjectSchema.optional()), where: PostWhereUniqueInput_schema_1.PostWhereUniqueInputObjectSchema }), findFirst: zod_1.z.object({ select: zod_1.z.lazy(() => PostSelect_schema_1.PostSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PostInclude_schema_1.PostIncludeObjectSchema.optional()), where: PostWhereInput_schema_1.PostWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([PostOrderByWithRelationInput_schema_1.PostOrderByWithRelationInputObjectSchema, PostOrderByWithRelationInput_schema_1.PostOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PostWhereUniqueInput_schema_1.PostWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(PostScalarFieldEnum_schema_1.PostScalarFieldEnumSchema).optional() }), findMany: zod_1.z.object({ select: zod_1.z.lazy(() => PostSelect_schema_1.PostSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PostInclude_schema_1.PostIncludeObjectSchema.optional()), where: PostWhereInput_schema_1.PostWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([PostOrderByWithRelationInput_schema_1.PostOrderByWithRelationInputObjectSchema, PostOrderByWithRelationInput_schema_1.PostOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PostWhereUniqueInput_schema_1.PostWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(PostScalarFieldEnum_schema_1.PostScalarFieldEnumSchema).optional() }), create: zod_1.z.object({ select: zod_1.z.lazy(() => PostSelect_schema_1.PostSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PostInclude_schema_1.PostIncludeObjectSchema.optional()), data: zod_1.z.union([PostCreateInput_schema_1.PostCreateInputObjectSchema, PostUncheckedCreateInput_schema_1.PostUncheckedCreateInputObjectSchema]) }), 'delete': zod_1.z.object({ select: zod_1.z.lazy(() => PostSelect_schema_1.PostSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PostInclude_schema_1.PostIncludeObjectSchema.optional()), where: PostWhereUniqueInput_schema_1.PostWhereUniqueInputObjectSchema }), deleteMany: zod_1.z.object({ where: PostWhereInput_schema_1.PostWhereInputObjectSchema.optional() }), update: zod_1.z.object({ select: zod_1.z.lazy(() => PostSelect_schema_1.PostSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PostInclude_schema_1.PostIncludeObjectSchema.optional()), data: zod_1.z.union([PostUpdateInput_schema_1.PostUpdateInputObjectSchema, PostUncheckedUpdateInput_schema_1.PostUncheckedUpdateInputObjectSchema]), where: PostWhereUniqueInput_schema_1.PostWhereUniqueInputObjectSchema }), updateMany: zod_1.z.object({ data: zod_1.z.union([PostUpdateManyMutationInput_schema_1.PostUpdateManyMutationInputObjectSchema, PostUncheckedUpdateManyInput_schema_1.PostUncheckedUpdateManyInputObjectSchema]), where: PostWhereInput_schema_1.PostWhereInputObjectSchema.optional() }), upsert: zod_1.z.object({ select: zod_1.z.lazy(() => PostSelect_schema_1.PostSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PostInclude_schema_1.PostIncludeObjectSchema.optional()), where: PostWhereUniqueInput_schema_1.PostWhereUniqueInputObjectSchema, create: zod_1.z.union([PostCreateInput_schema_1.PostCreateInputObjectSchema, PostUncheckedCreateInput_schema_1.PostUncheckedCreateInputObjectSchema]), update: zod_1.z.union([PostUpdateInput_schema_1.PostUpdateInputObjectSchema, PostUncheckedUpdateInput_schema_1.PostUncheckedUpdateInputObjectSchema]) }), aggregate: zod_1.z.object({ where: PostWhereInput_schema_1.PostWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([PostOrderByWithRelationInput_schema_1.PostOrderByWithRelationInputObjectSchema, PostOrderByWithRelationInput_schema_1.PostOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PostWhereUniqueInput_schema_1.PostWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), _count: zod_1.z.union([zod_1.z.literal(true), PostCountAggregateInput_schema_1.PostCountAggregateInputObjectSchema]).optional(), _min: PostMinAggregateInput_schema_1.PostMinAggregateInputObjectSchema.optional(), _max: PostMaxAggregateInput_schema_1.PostMaxAggregateInputObjectSchema.optional() }), groupBy: zod_1.z.object({ where: PostWhereInput_schema_1.PostWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([PostOrderByWithAggregationInput_schema_1.PostOrderByWithAggregationInputObjectSchema, PostOrderByWithAggregationInput_schema_1.PostOrderByWithAggregationInputObjectSchema.array()]).optional(), having: PostScalarWhereWithAggregatesInput_schema_1.PostScalarWhereWithAggregatesInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), by: zod_1.z.array(PostScalarFieldEnum_schema_1.PostScalarFieldEnumSchema), _count: zod_1.z.union([zod_1.z.literal(true), PostCountAggregateInput_schema_1.PostCountAggregateInputObjectSchema]).optional(), _min: PostMinAggregateInput_schema_1.PostMinAggregateInputObjectSchema.optional(), _max: PostMaxAggregateInput_schema_1.PostMaxAggregateInputObjectSchema.optional() }),
};
